apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "airflow.fullname" . }}
  labels:
    app: {{ template "airflow.name" . }}
    chart: {{ template "airflow.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 100%
  template:
    metadata:
      annotations: 
        checksum/config: {{ include (print $.Template.BasePath "/configmaps.yaml") . | sha256sum }}
        configmap.fabric8.io/update-on-change: "{{ template "airflow.fullname" . }}-env"
      labels:
        app: {{ template "airflow.name" . }}
        release: {{ .Release.Name }}
    spec:
      serviceAccountName: {{ template "airflow.fullname" . }}-scheduler-access
      #securityContext:
      #  fsGroup: 1000
      restartPolicy: Always
      initContainers:
      - name: "init-airflow"
        image: {{ .Values.airflow.image.repository }}:{{ .Values.airflow.image.tag }}
        imagePullPolicy: {{ .Values.airflow.image.pull_policy }}
        volumeMounts:
          - name: airflow-config
            mountPath: /root/airflow/airflow.cfg
            subPath: airflow.cfg
          - name: init-airflow
            mountPath: /root/airflow/init-airflow.sh
            subPath: init-airflow.sh
        envFrom:
          - secretRef:
              name: {{ template "airflow.fullname" . }}-env
        command:
          - "bash"
        args:
          - "-cx"
          - "bash /root/airflow/init-airflow.sh"
      {{- if .Values.airflow.dags.persistence.enabled }}
      - name: "init-dags"
        image: {{ .Values.airflow.image.repository }}:{{ .Values.airflow.image.tag }}
        imagePullPolicy: {{ .Values.airflow.image.pull_policy }}
        volumeMounts:
          - name: airflow-dags
            mountPath: /root/airflow/dags
          - name: airflow-config
            mountPath: /root/airflow/airflow.cfg
            subPath: airflow.cfg
          - name: init-dags
            mountPath: /root/airflow/init-dags.sh
            subPath: init-dags.sh
        envFrom:
          - secretRef:
              name: {{ template "airflow.fullname" . }}-env
        command:
          - "bash"
        args:
          - "-cx"
          - "bash /root/airflow/init-dags.sh"
      {{- end }}
      {{- if not .Values.airflow.dags.persistence.enabled }}
      - name: git-sync
        image: registry.cn-zhangjiakou.aliyuncs.com/guugle-containers/git-sync-amd64:v2.0.5
        imagePullPolicy: IfNotPresent
        securityContext:
          runAsUser: 0
        volumeMounts:
          - name: airflow-dags
            mountPath: /git
        env:
          - name: GIT_SYNC_REPO
            value: {{ .Values.airflow.dags.git.url }}
          - name: GIT_SYNC_BRANCH
            value: {{ .Values.airflow.dags.git.branch }}
          - name: GIT_SYNC_ROOT
            value: /git
          - name: GIT_SYNC_DEST
            value: repo
          - name: GIT_SYNC_ONE_TIME
            value: "true"
          - name: GIT_SYNC_USERNAME
            valueFrom:
              secretKeyRef:
                name: git
                key: GIT_SYNC_USERNAME
          - name: GIT_SYNC_PASSWORD
            valueFrom:
              secretKeyRef:
                name: git
                key: GIT_SYNC_PASSWORD
      {{- end }}
      containers:
      - name: scheduler
        image: {{ .Values.airflow.image.repository }}:{{ .Values.airflow.image.tag }}
        imagePullPolicy: {{ .Values.airflow.image.pull_policy }}
        args: ["scheduler"]
        envFrom:
        - secretRef:
            name: {{ template "airflow.fullname" . }}-env
        env:
        - name: AIRFLOW_KUBE_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        volumeMounts:
        - name: airflow-config
          mountPath: /root/airflow/airflow.cfg
          subPath: airflow.cfg
        - name: airflow-dags
          mountPath: /root/airflow/dags
        - name: airflow-logs
          mountPath: /root/airflow/logs
      - name: webserver
        image: {{ .Values.airflow.image.repository }}:{{ .Values.airflow.image.tag }}
        imagePullPolicy: {{ .Values.airflow.image.pull_policy }}
        ports:
        - name: webserver
          containerPort: 8080
        args: ["webserver"]
        envFrom:
          - secretRef:
              name: {{ template "airflow.fullname" . }}-env
        env:
        - name: AIRFLOW_KUBE_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        # - name: FORWARDED_ALLOW_IPS
        #   value: "*"
        volumeMounts:
        - name: airflow-config
          mountPath: /root/airflow/airflow.cfg
          subPath: airflow.cfg
        - name: webserver-config
          mountPath: /root/airflow/webserver_config.py
          subPath: webserver_config.py
        - name: airflow-logs
          mountPath: /root/airflow/logs
        - name: airflow-dags
          mountPath: /root/airflow/dags
        readinessProbe:
          initialDelaySeconds: 5
          timeoutSeconds: 5
          periodSeconds: 5
          httpGet:
            path: /health
            port: 8080
        livenessProbe:
          initialDelaySeconds: 5
          timeoutSeconds: 5
          failureThreshold: 5
          httpGet:
            path: /health
            port: 8080
      volumes:
      - name: webserver-config
        secret:
          secretName: webserver-config
      - name: init-airflow
        configMap:
          name: {{ template "airflow.fullname" . }}-init
      {{- if .Values.airflow.dags.persistence.enabled }}
      - name: init-dags
        configMap:
          name: {{ template "airflow.fullname" . }}-init-dags
      {{- end }}
      - name: airflow-config
        configMap:
          name: {{ template "airflow.fullname" . }}-config
      - name: airflow-logs
        persistentVolumeClaim:
          claimName: {{ if .Values.airflow.logs.persistence.existingClaim }}{{ .Values.airflow.logs.persistence.existingClaim }}{{- else }}{{ template "airflow.fullname" . }}-logs{{- end }}
      - name: airflow-dags
        {{- if .Values.airflow.dags.persistence.enabled }}
        persistentVolumeClaim:
          {{- if .Values.airflow.dags.persistence.existingClaim }}
          claimName: "{{ .Values.airflow.dags.persistence.existingClaim }}"
          {{- else }}
          claimName: {{ template "airflow.fullname" . }}-dags
          {{- end }}
          readOnly: true
        {{- else }}
        emptyDir: {}
        {{- end }}

